% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/C.R
\name{C}
\alias{C}
\title{Calculate test critical value}
\usage{
C(p_1_hat, n_1, p_0_hat, n_0, alpha, s, h, gamma)
}
\arguments{
\item{p_1_hat}{population 1 estimated p parameter}

\item{n_1}{population 0 sample size}

\item{p_0_hat}{population 0 estimated p parameter}

\item{alpha}{test significance level}

\item{s}{either 1 (for one sided test) or 2 (for two sided test)}

\item{gamma}{minimum required lift}
}
\value{
critical value C
}
\description{
this function calculates the test statistic critical
value C which guarantees significance level (false discovery rate) \alpha
}
\details{
when doing one-sided tests it's usually the case
that population 1 is considered the treatment and population
population 0 serves as the control. In 2 sided tests each
usually represents a different treatment. 2 sided tests with
non zero gamma aren't supported yet.
}
\examples{
library(hype)

p_0 <- 0.2
p_1 <- 0.2 # Null is true
n_0 <- n_1 <- 10000
alpha <- 0.05

s <- 1 # one sided test
h <- 3 # number of tests
gamma <- 0.02 # minimum required lift
M <- 10000 # number of simulations

p_1_hat <- as.matrix(replicate(
  n = h,
  rbinom(M, size = n_1, prob = p_1 + gamma) / n_1
), ncol = h)

p_0_hat <- as.matrix(replicate(
  n = h,
  rbinom(M, size = n_0, prob = p_0) / n_0
), ncol = h)
const <- mapply(
  function(p_1_hat, p_0_hat) {
    C(
      p_1_hat = p_1_hat, n_1 = rep(n_1, M),
      p_0_hat = p_0_hat, n_0 = rep(n_0, M),
      alpha = alpha, s = s, h = h,
      gamma = gamma
    )
  },
  split(p_1_hat, rep(1:ncol(p_1_hat),
                     each = nrow(p_1_hat)
  )),
  split(p_0_hat, rep(1:ncol(p_0_hat),
                     each = nrow(p_0_hat)
  ))
)

diff <- p_1_hat - p_0_hat

mean(apply(diff - const, 1, function(row) any(row > 0))) # note the any function - pertaining to FWER
}
